1. 自己的容器是部支持pop喊出调用析构函数的,因此,线程间通过queue传递数据时,take函数调用queue的pop,不会调用
引用计数类的析构函数,导致内存得不到释放,因此通过这个queue来传递数据时,不能通过对象本身传递,因为会由于
上述原因导致内存得不到释放

    通过pop调用析构函数解决
    新出现的问提!!!!!!!!!!!!!!!!!!!!!!!!!!!!会导致coredump
    pop调用析构函数,析构数组对应位置的对象,但是重新push时,这个对象可能被重新赋值.但是!!!!
        FdInfo中包含std::list对象,貌似没有实现好,析构的时候,指针没有置空,导致对象重新赋值时,调用
        std::list::operator=,此时先会析构老的对象,由于指针没有置空,从而造成空指针,导致core
            当worker响应,iohandler会现将rcbuf push到fd的_to_send std::list对象中,如果write时,client
            关闭连接,write失败,此时会析构当前对象,当新请求到时,则会重新利用当前对象,赋值时导致core.....

            需要将client的回复数据先加到list中么?因为基本上数据发送时,都会发送完,很少有发送不完的情况.

        how to fix??????????????????//


发现问题:
    当client只连接,而不发送和接受数据,连接完直接关闭连接.当2个线程同时跑大量的连接,比如2个线程,分别跑
    10000个连接,则进行几次后,connect会超时失败,具体的现象是:connect超时,抓包发现,connect过程,不停重发
    SYN包.......没找到原因
    超时时,ss发现大量的CLOSE_WAIT ?



/proc/sys/fs/file-max: 系统维度最大可以打开的文件个数

/etc/sysctl.conf    file-max
/etc/security/limits.conf  soft/hard


2. server内部统计
3. 动态增加/删除线程
3. 通过对象池来解决Rcbuf对象不停生成的问题.
